{
  "check_async_task": "Checks the status of an asynchronous task using check_async_task. Takes a required task_id parameter (string) that uniquely identifies the task. Returns the task's current status (e.g., \"completed\", \"in progress\"), description, and result information if available. Use this to monitor long-running operations initiated by other tools.",
  "schedule_async_task": "Schedules a task to run asynchronously in the background using schedule_async_task. Takes required parameters: description (brief task summary) and task_prompt (detailed execution instructions), plus optional notify_on_completion (boolean for completion notification). Returns a task_id string that uniquely identifies the scheduled task for future reference.",
  "extract": "Extract structured information from text using the extract tool. Requires message parameter (text to analyze), with optional template (predefined extraction pattern), target (specific information to find), and temperature (flexibility level) parameters. Returns extracted data in JSON format, structured according to the template or target specified. Use when you need to convert unstructured text into structured data.",
  "persistence": "Store and retrieve data using the persistence tool. Supports four operations: get_data (retrieves value by key), set_data (stores key-value pair), get_file (retrieves entire file content), and set_file (saves data to file). Required parameter: operation. Optional parameters: location (file path), key (for data operations), value/data (for storing). Returns retrieved values or success status.",
  "questionnaire_tool": "Presents interactive surveys using questionnaire_tool to collect user responses. Requires questionnaire_id (string) to specify which survey to run. Optional parameters: custom_questions (string) for custom content and context_data (string) for additional information. Returns an object with questionnaire_id, completion status, and all user responses as key-value pairs.",
  "weather_tool": "Retrieves current weather information using weather_tool. Requires location parameter (city/region name as string). Optional parameters: units (celsius/fahrenheit) and include_forecast (boolean). Returns temperature, weather conditions, humidity percentage, and wind speed. Use when needing current meteorological data for specific locations."
}